version: '3'
services:
  n8n:
    image: docker.n8n.io/n8nio/n8n
    container_name: n8nio
    user: root
    tty: true
    stdin_open: true
    networks:
      - public-net
    restart: always
    environment:
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=n8npostgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=${POSTGRES_DB}
      - DB_POSTGRESDB_USER=${POSTGRES_NON_ROOT_USER}
      - DB_POSTGRESDB_PASSWORD=${POSTGRES_NON_ROOT_PASSWORD}
    ports:
      - 5679:5678
    links:
      - n8npostgres
    depends_on:
      n8npostgres:
        condition: service_healthy
    volumes:
      - ./data:/home/node/.n8n
      - ./files:/home/files
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro 


  n8npostgres:
    image: postgres:15
    container_name: n8nPost
    restart: always
    networks:
      - public-net
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
      - POSTGRES_NON_ROOT_USER
      - POSTGRES_NON_ROOT_PASSWORD
    # environment:
    #   - POTGRES_DB=n8ndb
    #   - POSTGRES_USER=n8nUser
    #   - POSTGRES_PASSWORD=n8nPass
    volumes:
      - ./database:/var/lib/postgresql/data
      - ./init-data.sh:/docker-entrypoint-initdb.d/init-data.sh
    healthcheck:
      # test: ['CMD-SHELL', 'pg_isready -h localhost -U n8nUser -d n8ndb']
      test: ['CMD-SHELL', 'pg_isready -h localhost -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
      interval: 5s
      timeout: 5s
      retries: 10


networks:
  public-net:
    external: true
    name: public-net
