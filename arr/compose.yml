version: '3'

services:

  radarr:
    container_name: radarr
    image: lscr.io/linuxserver/radarr:latest
    networks:
      - public-net
    volumes:
      - ~/storage/public/:/downloads
      - ~/storage/public/movies:/movies
      - ./radarr:/config
    ports:
      - 7878:7878
    environment:
      - PUID=$(UID)
      - PGID=$(GID)
      - TZ=Asia/Dhaka    
    restart: unless-stopped
    labels:
      - "traefik.enable=true"  
      - "traefik.http.routers.radarr-insecure.rule=Host(`${public_ip}`, `${local_ip}`) && PathPrefix(`/radarr`)"      
      - "traefik.http.routers.radarr-insecure.entrypoints=web"      
      # https
      - "traefik.http.routers.radarr.rule=Host(`${ngrok}`,  `${public_ip}`, `${local_ip}`) && PathPrefix(`/radarr`)"      
      - "traefik.http.routers.radarr.entrypoints=websecure"      
      # - "traefik.http.routers.radarr.middlewares=auth@file"      
      - "traefik.http.services.radarr.loadbalancer.server.port=7878"
      - 'traefik.http.routers.radarr.tls=true'            

  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    networks:
      - public-net
    environment:
      - PUID=$(UID)
      - PGID=$(GID)
      - TZ=Asia/Dhaka
    volumes: 
      - ./sonarr:/config
      - ~/storage/public/:/tv #optional
      - ~/storage/public/:/downloads #optional
    ports:
      - 8989:8989
    restart: unless-stopped
    labels:
      - "traefik.enable=true"  
      - "traefik.http.routers.sonarr-insecure.rule=Host(`${public_ip}`, `${local_ip}`) && PathPrefix(`/sonarr`)"      
      - "traefik.http.routers.sonarr-insecure.entrypoints=web"      
      # https
      - "traefik.http.routers.sonarr.rule=Host(`${ngrok}`, `${public_ip}`, `${local_ip}`) && PathPrefix(`/sonarr`)"      
      - "traefik.http.routers.sonarr.entrypoints=websecure"      
      # - "traefik.http.routers.sonarr.middlewares=auth@file"      
      - "traefik.http.services.sonarr.loadbalancer.server.port=8989"
      - 'traefik.http.routers.sonarr.tls=true'            


  prowlarr:
    image: lscr.io/linuxserver/prowlarr:develop
    container_name: prowlarr
    networks:
      - public-net
    environment:
      - PUID=$(UID)
      - PGID=$(GID)
      - TZ=Asia/Dhaka
    volumes:
      - ./prowlarr:/config
    ports:
      - 9696:9696
    restart: unless-stopped
    # labels:
    #   - "traefik.enable=true"  
    #   - "traefik.http.routers.prowlarr.rule=Host(`prowlarr.home`)"      
    #   - "traefik.http.routers.prowlarr.entrypoints=web"      
    #   - "traefik.http.services.prowlarr.loadbalancer.server.port=9696"    

  flaresolverr:
    # DockerHub mirror flaresolverr/flaresolverr:latest
    image: ghcr.io/flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    networks:
      - public-net
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - LOG_HTML=${LOG_HTML:-false}
      - CAPTCHA_SOLVER=${CAPTCHA_SOLVER:-none}
      - TZ=Asia/Dhaka
    ports:
      - "${PORT:-8191}:8191"
    restart: unless-stopped         


networks:
  public-net:
    external: true
    name: public-net

