version: "3.8"

services:
  immich-server:
    container_name: immich_server
    image: ghcr.io/immich-app/immich-server:${IMMICH_VERSION:-release}
    ports:
      - 2283:3001
    networks:
      - public-net
    command: ["start.sh", "immich"]
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${UPLOAD_LOCATION}:/usr/src/app/upload
      - ~/storage/private/photos/:/mnt/media/private-photos:ro
      - ~/storage/private/macbook/:/mnt/media/macbook:ro
      - ~/storage/private/obsidian/ObsidianNotes/media:/mnt/media/obsidian:ro
      - ~/storage/private/youtube-dl:/mnt/media/youtube-dl:ro
    env_file:
      - .env
    depends_on:
      - redis
      # - database
    restart: always
    labels:
      - "traefik.enable=true"
      # https
      - "traefik.http.routers.immich.rule=Host(`${duck}`)"
      - "traefik.http.routers.immich.entrypoints=websecure"
      - 'traefik.http.routers.immich.tls=true'
      - "traefik.http.services.immich.loadbalancer.server.port=3001"
      # http
      - "traefik.http.routers.immich-insecure.rule=Host(`${duck}`)"      
      - "traefik.http.routers.immich-insecure.entrypoints=web"

  immich-microservices:
    container_name: immich_microservices
    image: ghcr.io/immich-app/immich-server:${IMMICH_VERSION:-release}
    networks:
      - public-net
    extends:
      file: hwaccel.yml
      service: hwaccel
    command: ["start.sh", "microservices"]
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${UPLOAD_LOCATION}:/usr/src/app/upload
      - ~/storage/private/photos/:/mnt/media/private-photos:ro
      - ~/storage/private/macbook/:/mnt/media/macbook:ro
      - ~/storage/private/obsidian/ObsidianNotes/media:/mnt/media/obsidian:ro
      - ~/storage/private/youtube-dl:/mnt/media/youtube-dl:ro
    env_file:
      - .env
    depends_on:
      - redis
      # - database
    restart: always

  immich-machine-learning:
    container_name: immich_machine_learning
    networks:
      - public-net
    image: ghcr.io/immich-app/immich-machine-learning:${IMMICH_VERSION:-release}
    volumes:
      - ${docker_data_dir}/immich-machine-learning:/cache
    env_file:
      - .env
    restart: always

  redis:
    container_name: immich_redis
    networks:
      - public-net
    image: redis:6.2-alpine@sha256:c5a607fb6e1bb15d32bbcf14db22787d19e428d59e31a5da67511b49bb0f1ccc
    restart: always

  database:
    container_name: immich_postgres
    image: tensorchord/pgvecto-rs:pg14-v0.1.11@sha256:0335a1a22f8c5dd1b697f14f079934f5152eaaa216c09b61e293be285491f8ee
    env_file:
      - .env
    networks:
      - public-net
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_DB: ${DB_DATABASE_NAME}
    volumes:
      - ${docker_data_dir}/database:/var/lib/postgresql/data
    restart: always


networks:
  public-net:
    external: true
    name: public-net

