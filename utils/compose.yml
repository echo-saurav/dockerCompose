version: '3'

services:
  homepage:
    image: ghcr.io/gethomepage/homepage:latest
    container_name: homepage
    networks:
      - public-net
    restart: unless-stopped    
    depends_on:
      - dockerproxy
    ports:
      - 1011:3000
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=Asia/UTC      
      - HOMEPAGE_VAR_PAIRDROP=${HOMEPAGE_VAR_PAIRDROP}
      - HOMEPAGE_VAR_JELLY=${HOMEPAGE_VAR_JELLY}
      - HOMEPAGE_VAR_NAVI=${HOMEPAGE_VAR_NAVI}
      - HOMEPAGE_VAR_WATCH=${HOMEPAGE_VAR_WATCH}
      - HOMEPAGE_VAR_TRANS_USER=${USER_TRANS}
      - HOMEPAGE_VAR_TRANS_PASS=${USER_PASS_TRANS}
      - HOMEPAGE_VAR_UPTIME_ROBOT_API=${UPTIME_ROBOT_API}
      - HOMEPAGE_VAR_RADARR=${RADARR_API}
      - HOMEPAGE_VAR_SONARR=${SONARR_API}
      - HOMEPAGE_VAR_PROWLARR=${PROWLARR_API}
    volumes:
      - ${HOMEPAGE_CONFIG}:/app/config # Make sure your local config directory exists
      # - /var/run/docker.sock:/var/run/docker.sock:ro # (optional) For docker integrations        
    labels:
      - "traefik.enable=true"  
      - "traefik.http.routers.homepage.rule=Host(`${local_ip}`, `${public_ip}`) && (PathPrefix(`/homepage`) || PathPrefix(`/api`) || PathPrefix(`/_next`) || PathPrefix(`/site.webman`) || PathPrefix(`/android-chrome`) || PathPrefix(`/framework`))"
      - "traefik.http.routers.homepage.entrypoints=web"
      - "traefik.http.middlewares.homepage-strip.stripprefix.prefixes=/homepage"
      - "traefik.http.routers.homepage.middlewares=homepage-strip"
      # https
      - "traefik.http.routers.homepage-secure.rule=Host(`${public_ip}`, `${ngrok}`) && (PathPrefix(`/homepage`) || PathPrefix(`/api`) || PathPrefix(`/_next`) || PathPrefix(`/site.webman`) || PathPrefix(`/android-chrome`) || PathPrefix(`/framework`))"
      - "traefik.http.routers.homepage-secure.entrypoints=websecure"
      # - "traefik.http.middlewares.homepage-strip.stripprefix.prefixes=/homepage"
      - "traefik.http.routers.homepage-secure.middlewares=homepage-strip"
      - 'traefik.http.routers.homepage-secure.tls=true'            
      - "traefik.http.services.homepage.loadbalancer.server.port=3000"    

  dockerproxy:
    image: ghcr.io/tecnativa/docker-socket-proxy:latest
    container_name: dockerproxy
    networks:
      - public-net
    environment:
    - CONTAINERS=1 # Allow access to viewing containers
    - SERVICES=1 # Allow access to viewing services (necessary when using Docker Swarm)
    - TASKS=1 # Allow access to viewing tasks (necessary when using Docker Swarm)
    - POST=0 # Disallow any POST operations (effectively read-only)
    ports:
    - 127.0.0.1:2375:2375
    # environment:
    #   - CONTAINERS=1 # Allow access to viewing containers
    #   - POST=0 # Disallow any POST operations (effectively read-only)
    # ports:
    #   - 2375:2375
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro # Mounted as read-only
    restart: unless-stopped



  # neko-kde:
  #   container_name: neko-kde
  #   image: m1k1o/neko:kde
  #   restart: "unless-stopped"
  #   networks:
  #     - public-net
  #   shm_size: "2gb"   
  #   cap_add:
  #       - SYS_ADMIN
  #   ports:
  #       - "7777:8080"
  #       - "8081:8081/tcp"
  #       - "8082:8082/udp"
  #   environment:
  #       NEKO_IMPLICIT_CONTROL: true
  #       NEKO_FILE_TRANSFER_ENABLED: true
  #       NEKO_FILE_TRANSFER_PATH: /home/neko/Downloads
  #       NEKO_SCREEN: '1920x1080@30'
  #       NEKO_PASSWORD: neko
  #       NEKO_PASSWORD_ADMIN: admin
  #       NEKO_TCPMUX: 8081
  #       NEKO_UDPMUX: 8082
  #       NEKO_ICELITE: 1

  pairdrop:
    image: lscr.io/linuxserver/pairdrop:latest
    container_name: pairdrop
    networks:
      - public-net     
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Asia/UTC
      - RATE_LIMIT=false #optional
      - WS_FALLBACK=true #optional
      - RTC_CONFIG= #optional
    ports:
      - 3550:3000
    restart: unless-stopped


  blaze:
    container_name: blaze
    restart: unless-stopped
    networks:
      - public-net
    image: akashhamirwasia/blaze:latest
    environment:
      PORT: 80
    ports:
      - 3030:3030
      - 6969:80


  couchdb:
    image: apache/couchdb:3.3.2
    container_name: couchdb  
    networks:
      - public-net
    ports:
      - 5984:5984
    volumes:
      - ${data_dir}/couchdb:/opt/couchdb/data
    restart: always
    environment:
      - COUCHDB_USER=${COUCHDB_USER}
      - COUCHDB_PASSWORD=${COUCHDB_PASSWORD}


  nginx:
    image: nginx
    container_name: nginx
    networks:
      - public-net
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=Asia/Dhaka
    volumes:
      - ~/storage/public/nginx/html/:/usr/share/nginx/html
      - ~/storage/public/nginx/nginx.conf:/etc/nginx/conf.d/default.conf  
    ports:
      - 2222:80
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nginx.rule=Host(`${ngrok}`, `${public_ip}`, `${local_ip}`) && PathPrefix(`/readme`)"      
      - "traefik.http.routers.nginx.entrypoints=web"
      # https
      - "traefik.http.routers.nginx-secure.rule=Host(`${ngrok}`, `${public_ip}`, `${local_ip}`) && PathPrefix(`/readme`)"      
      - "traefik.http.routers.nginx-secure.entrypoints=websecure"
      # - "traefik.http.services.nginx-secure.loadbalancer.server.port=80"      
      - 'traefik.http.routers.nginx-secure.tls=true'      


  # homeassistant:
  #   container_name: homeassistant
  #   image: "ghcr.io/home-assistant/home-assistant:stable"
  #   volumes:
  #     - ${data_dir}/homeassistant:/config
  #     - /etc/localtime:/etc/localtime:ro
  #   restart: unless-stopped
  #   privileged: true
  #   network_mode: host
  #   ports:
  #       - 8123:8123
  #   # networks:
  #   #   - public-net 
  #   # labels:
  #   #   - "traefik.enable=true"
  #   #   - "traefik.http.routers.homeassistant.rule=Host(`homeassistant.home`)"      
  #   #   - "traefik.http.routers.homeassistant.entrypoints=web"
  #   #   - "traefik.http.services.homeassistant.loadbalancer.server.homeassistant=http://192.168.0.120:8123"




networks:
  public-net:
    external: true
    name: public-net

